{"version":3,"sources":["GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsFromServer","useState","shouldReverse","setShouldRevers","sortBy","setSortBy","lengthValue","setLengthValue","workCopy","sort","name1","name2","localeCompare","length","reverse","map","good","Button","type","variant","className","onClick","Form","Select","value","onChange","event","target","App","isGoodsToShow","setIsGoodsToShow","Container","Row","Col","md","ReactDOM","render","document","getElementById"],"mappings":"2QA+GeA,EAxGoB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACpC,EAAyCC,oBAAS,GAAlD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4BF,mBAAS,WAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAsCJ,mBAAS,KAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAQ,YAAOR,GA2BrB,OAfAQ,EAASC,MAAK,SAACC,EAAOC,GACpB,OAAQP,GACN,IAAK,OACH,OAAOM,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITX,GACFM,EAASM,UAIT,qCACE,6BACGN,EAASO,KAAI,SAAAC,GACZ,OAAIA,EAAKH,SAAWP,EAEhB,6BACGU,GADMA,GAMN,UAIX,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,kBACRC,UAAU,MACVC,QAAS,kBAAMlB,GAAiBD,IAJlC,oBASA,cAACe,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,kBACRC,UAAU,MACVC,QAAS,kBAAMhB,EAAU,SAJ3B,iCASA,cAACY,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,kBACRC,UAAU,MACVC,QAAS,kBAAMhB,EAAU,WAJ3B,4BASA,cAACY,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,kBACRC,UAAU,MACVC,QApEW,WACflB,GAAgB,GAChBE,EAAU,WACVE,EAAe,MA6Db,uBASA,eAACe,EAAA,EAAKC,OAAN,CACEC,MAAOlB,EACPmB,SA/Ee,SAACC,GACpBnB,EAAemB,EAAMC,OAAOH,QA4E1B,UAIE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,uBCjGFxB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+Ba4B,EA5BO,WACpB,MAA0C3B,oBAAS,GAAnD,mBAAO4B,EAAP,KAAsBC,EAAtB,KAEA,OACE,qBAAKV,UAAU,MAAf,SACE,cAACW,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKZ,UAAU,4BAAf,SACE,eAACa,EAAA,EAAD,CAAKC,GAAG,OAAR,UACE,uCAECL,GAAiB,cAAC,EAAD,CAAW7B,gBAAiBA,KAE5C6B,GACA,cAACZ,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,kBACRE,QAAS,kBAAMS,GAAiB,IAHlC,6BC9BdK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4827ada.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\ntype Props = {\n  goodsFromServer: string[];\n};\n\nconst GoodsList: React.FC<Props> = ({ goodsFromServer }) => {\n  const [shouldReverse, setShouldRevers] = useState(false);\n  const [sortBy, setSortBy] = useState('default');\n  const [lengthValue, setLengthValue] = useState('1');\n\n  const workCopy = [...goodsFromServer];\n\n  const lengthChange = (event:ChangeEvent<HTMLSelectElement>):void => {\n    setLengthValue(event.target.value);\n  };\n\n  const resetAll = () => {\n    setShouldRevers(false);\n    setSortBy('default');\n    setLengthValue('1');\n  };\n\n  workCopy.sort((name1, name2) => {\n    switch (sortBy) {\n      case 'name':\n        return name1.localeCompare(name2);\n      case 'length':\n        return name1.length - name2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (shouldReverse) {\n    workCopy.reverse();\n  }\n\n  return (\n    <>\n      <ul>\n        {workCopy.map(good => {\n          if (good.length >= +lengthValue) {\n            return (\n              <li key={good}>\n                {good}\n              </li>\n            );\n          }\n\n          return null;\n        })}\n      </ul>\n\n      <Button\n        type=\"button\"\n        variant=\"outline-primary\"\n        className=\"m-1\"\n        onClick={() => setShouldRevers(!shouldReverse)}\n      >\n        Revert\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"outline-primary\"\n        className=\"m-1\"\n        onClick={() => setSortBy('name')}\n      >\n        Sort alphabetically\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"outline-primary\"\n        className=\"m-1\"\n        onClick={() => setSortBy('length')}\n      >\n        Sort by length\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"outline-primary\"\n        className=\"m-1\"\n        onClick={resetAll}\n      >\n        Reset all\n      </Button>\n\n      <Form.Select\n        value={lengthValue}\n        onChange={lengthChange}\n      >\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n      </Form.Select>\n\n    </>\n  );\n};\n\nexport default GoodsList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  Button, Col, Container, Row,\n} from 'react-bootstrap';\nimport GoodsList from './GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isGoodsToShow, setIsGoodsToShow] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <h1>Goods</h1>\n\n            {isGoodsToShow && <GoodsList goodsFromServer={goodsFromServer} />}\n\n            {!isGoodsToShow && (\n              <Button\n                type=\"button\"\n                variant=\"outline-primary\"\n                onClick={() => setIsGoodsToShow(true)}\n              >\n                Start\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}